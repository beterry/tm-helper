{"version":3,"sources":["constants.js","components/Cubes.js","icons/Greenery.svg","icons/Ocean.svg","icons/Temp.svg","icons/Minus.svg","components/Card.js","components/ResourceOverview.js","icons/TR.svg","icons/ME.svg","icons/Steel.svg","icons/Titanium.svg","icons/Plants.svg","icons/Energy.svg","icons/Heat.svg","icons/steel-conversion.svg","icons/titanium-conversion.svg","icons/plants-conversion.svg","icons/heat-conversion.svg","App.js","index.js"],"names":["COLORS","bk","text","CubeContainer","styled","div","Cube","button","GoldCube","SilverCube","BronzeCube","CubesComponent","increment","current","onClick","disabled","ResourceCard","title","available","production","incrementProd","color","darkText","icon","conversion","conversionAction","conversionAvailable","conversionText","children","Wrapper","id","CardContainer","CardHeader","CardTitle","CardIcon","src","alt","FlexWrapper","AvailableNumber","ProductionContainer","IncrementProduction","className","Production","Cubes","ConversionContainer","ConversionButton","TRCard","tr","TRCardContainer","GlobalParamContainer","GlobalParam","greeneryTileIcon","oceanTileIcon","tempIcon","minusIcon","section","props","h3","img","h2","a","Amount","h4","textColor","Icon","ResourceOverview","amount","anchor","href","MainWrapper","main","Heading","SectionPadding","ConversionGraphic","ProductionButton","ProductionChoiceContainer","CancelButton","Overview","LogContainer","App","useState","setTR","mcAvailable","setMcAvailable","mcProd","setMcProd","steelAvailable","setSteelAvailable","steelProd","setSteelProd","titaniumAvailable","setTitaniumAvailable","titaniumProd","setTitaniumProd","plantsAvailable","setPlantsAvailable","plantProd","setPlantProd","energyAvailable","setEnergyAvailable","energyProd","setEnergyProd","heatAvailable","setHeatAvailable","heatProd","setHeatProd","showProductionChoice","setShowProductionChoice","log","setLog","toggleProductionChoice","addToLog","action","prevLog","slice","trIcon","mcIcon","steelIcon","titaniumIcon","plantsIcon","energyIcon","heatIcon","steelConversionGraphic","titaniumConversionGraphic","plantConversionGraphic","heatConversionGraphic","length","map","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3feacd2b.chunk.js","sourcesContent":["const COLORS = {\r\n    primary: {\r\n        main: '#C24914',\r\n    },\r\n    mc: {\r\n        bk: '#FFE600',\r\n        text: '#F29102'\r\n    },\r\n    steel: {\r\n        bk: '#976138',\r\n        text: '#523B28',\r\n    },\r\n    titanium: {\r\n        bk: '#000000',\r\n        text: '#FFE600',\r\n    },\r\n    plants: {\r\n        bk: '#6CB526',\r\n        text: '#19592F',\r\n    },\r\n    energy: {\r\n        bk: '#94308B',\r\n        text: '#FFFFFF',\r\n    },\r\n    heat: {\r\n        bk: '#EA4929',\r\n        text: '#FFE600',\r\n    },\r\n}\r\n\r\nexport {COLORS};","import styled from 'styled-components';\r\n\r\nconst CubesComponent = ({increment, current}) => {\r\n    return (\r\n        <CubeContainer>\r\n            <GoldCube onClick={() => increment(-10)} disabled={current < 10}>-10</GoldCube>\r\n            <SilverCube onClick={() => increment(-5)} disabled={current < 5}>-5</SilverCube>\r\n            <BronzeCube onClick={() => increment(-1)} disabled={current < 1}>-1</BronzeCube>\r\n            <BronzeCube onClick={() => increment(1)}>+1</BronzeCube>\r\n            <SilverCube onClick={() => increment(5)}>+5</SilverCube>\r\n            <GoldCube onClick={() => increment(10)}>+10</GoldCube>\r\n        </CubeContainer>\r\n    )\r\n}\r\n\r\nconst CubeContainer = styled.div`\r\n    margin-top: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Cube = styled.button`\r\n    height: 40px;\r\n    width: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n\r\n    &:disabled{\r\n        opacity: .3;\r\n    }\r\n`\r\n\r\nconst GoldCube = styled(Cube)`\r\n    background: linear-gradient(#FFEEAD, #E2B300);\r\n    border: 1px solid #9F7E00;\r\n    color: #9F7E00;\r\n`\r\nconst SilverCube = styled(Cube)`\r\n    background: linear-gradient(#CCCCCC, #808080);\r\n    border: 1px solid #707070;\r\n    color: #707070;\r\n`\r\n\r\nconst BronzeCube = styled(Cube)`\r\n    background: linear-gradient(#E9A300, #B16000);\r\n    border: 1px solid #693F00;\r\n    color: #693F00;\r\n`\r\n\r\nexport default CubesComponent;","export default __webpack_public_path__ + \"static/media/Greenery.ba1b4ebf.svg\";","export default __webpack_public_path__ + \"static/media/Ocean.e7d38271.svg\";","export default __webpack_public_path__ + \"static/media/Temp.c0e14c2d.svg\";","export default __webpack_public_path__ + \"static/media/Minus.0ca4ec73.svg\";","import styled from 'styled-components';\r\n\r\n//import components\r\nimport Cubes from './Cubes';\r\n\r\n//import icons\r\nimport greeneryTileIcon from '../icons/Greenery.svg';\r\nimport oceanTileIcon from '../icons/Ocean.svg';\r\nimport tempIcon from '../icons/Temp.svg';\r\nimport minusIcon from '../icons/Minus.svg';\r\n\r\nconst ResourceCard = ({\r\n    title,\r\n    available,\r\n    increment,\r\n    production,\r\n    incrementProd,\r\n    color = '#C24914',\r\n    darkText = false,\r\n    icon,\r\n    conversion,\r\n    conversionAction,\r\n    conversionAvailable,\r\n    conversionText,\r\n    children\r\n}) => {\r\n    return (\r\n        <Wrapper id={title}>\r\n            <CardContainer>\r\n                <CardHeader color={color} darkText={darkText}>\r\n                    <CardTitle>{title}</CardTitle>\r\n                    <CardIcon src={icon} alt='icon' />\r\n                </CardHeader>\r\n                <FlexWrapper>\r\n                    <AvailableNumber>{available}</AvailableNumber>\r\n                    <ProductionContainer>\r\n                        <IncrementProduction onClick={() => incrementProd(-1)} disabled={production <= 0}>\r\n                            <span className=\"material-icons\">\r\n                                arrow_left\r\n                            </span>\r\n                        </IncrementProduction>\r\n                        <Production>{production}</Production>\r\n                        <IncrementProduction onClick={() => incrementProd(1)}>\r\n                            <span className=\"material-icons\">\r\n                                arrow_right\r\n                            </span>\r\n                        </IncrementProduction>\r\n                    </ProductionContainer>\r\n                </FlexWrapper>\r\n                <Cubes current={available} increment={increment} />\r\n                <ConversionContainer>\r\n                    {conversion}\r\n                    {conversionAvailable && <ConversionButton onClick={() => conversionAction()} color={color}>{conversionText}</ConversionButton>}\r\n                </ConversionContainer>\r\n            </CardContainer>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst TRCard = ({\r\n    tr,\r\n    increment,\r\n    color = '#C24914',\r\n    darkText = false,\r\n    icon\r\n}) => {\r\n    return(\r\n        <TRCardContainer>\r\n            <CardHeader color={color} darkText={darkText}>\r\n                <CardTitle>Terraform Rating</CardTitle>\r\n                <CardIcon src={icon} alt='icon' />\r\n            </CardHeader>\r\n            <AvailableNumber>{tr}</AvailableNumber>\r\n            <GlobalParamContainer>\r\n                <GlobalParam onClick={() => increment(1)}>\r\n                    <img src={greeneryTileIcon} alt='Greenery tile' />\r\n                </GlobalParam>\r\n                <GlobalParam onClick={() => increment(1)}>\r\n                    <img src={oceanTileIcon} alt='Ocean tile' />\r\n                </GlobalParam>\r\n                <GlobalParam onClick={() => increment(1)}>\r\n                    <img src={tempIcon} alt='Raise temperature' />\r\n                </GlobalParam>\r\n                <GlobalParam onClick={() => increment(-1)}>\r\n                    <img src={minusIcon} alt='Minus TR' />\r\n                </GlobalParam>\r\n            </GlobalParamContainer>\r\n        </TRCardContainer>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n    padding-top: 24px;\r\n\r\n`\r\n\r\nconst CardContainer = styled.div`\r\n    background-color: white;\r\n    padding: 16px;\r\n    border-radius: 4px;\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,.35);\r\n\r\n    overflow: hidden;\r\n`;\r\n\r\nconst TRCardContainer = styled(CardContainer)`\r\n    margin: 24px 0;\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n    color: ${props => props.darkText ? 'black' : 'white'};\r\n    background-color: ${props => props.color};\r\n    padding: 8px 16px;\r\n    margin: -16px;\r\n    margin-bottom: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst CardTitle = styled.h3`\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: 500;\r\n    margin: 0;\r\n    letter-spacing: 1px;\r\n`\r\n\r\nconst CardIcon = styled.img`\r\n    width: 24px;\r\n`\r\n\r\nconst AvailableNumber = styled.h2`\r\n    font-size: 4.5rem;\r\n    font-weight: 700;\r\n    margin: 0;\r\n    font-family: 'Share Tech', sans-serif;\r\n`\r\n\r\nconst FlexWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 8px;\r\n`\r\n\r\nconst ProductionContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: -16px;\r\n`\r\n\r\nconst Production = styled.h3`\r\n    height: 40px;\r\n    width: 40px;\r\n    background: linear-gradient(#643C23, #8D562A);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    margin: 0;\r\n`\r\n\r\nconst IncrementProduction = styled.button`\r\n    height: 40px;\r\n    width: 40px;\r\n    border: none;\r\n    background-color: transparent;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .material-icons{\r\n        font-size: 32px;\r\n    }\r\n`\r\n\r\nconst GlobalParamContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nconst GlobalParam = styled.button`\r\n    width: 60px;\r\n    height: 60px;\r\n    background-color: transparent;\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    img{\r\n        width: 60px;\r\n    }\r\n`\r\n\r\nconst ConversionContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n\r\n    p{\r\n        margin: 0;\r\n        margin-top: 24px;\r\n        opacity: .75;\r\n    }\r\n\r\n    *{\r\n        margin-top: 24px;\r\n    }\r\n`\r\n\r\nconst ConversionButton = styled.button`\r\n    padding: 4px 16px; \r\n    margin-right: -16px;\r\n    background-color: transparent;\r\n    border: none;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1.5px;\r\n    color: ${props => props.color};\r\n    font-weight: 600;\r\n`\r\n\r\nexport {ResourceCard, TRCard};","import styled from 'styled-components';\r\n\r\nconst ResourceOverview = ({\r\n    amount,\r\n    icon,\r\n    color,\r\n    textColor = 'black',\r\n    anchor,\r\n}) => {\r\n    return (\r\n        <Wrapper color={color} href={`#${anchor}`}>\r\n            <Icon src={icon} />\r\n            <Amount textColor={textColor}>{amount}</Amount>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.a`\r\n    padding: 8px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    background-color: ${props => props.color};\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,.35);\r\n    text-decoration: none;\r\n`\r\n\r\nconst Amount = styled.h4`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    color: ${props => props.textColor};\r\n    font-family: 'Share Tech', sans-serif;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    width: 30px;\r\n`\r\n\r\nexport default ResourceOverview;","export default __webpack_public_path__ + \"static/media/TR.6fdd0556.svg\";","export default __webpack_public_path__ + \"static/media/ME.536da777.svg\";","export default __webpack_public_path__ + \"static/media/Steel.32513866.svg\";","export default __webpack_public_path__ + \"static/media/Titanium.8be1d001.svg\";","export default __webpack_public_path__ + \"static/media/Plants.6070467c.svg\";","export default __webpack_public_path__ + \"static/media/Energy.ff9d286b.svg\";","export default __webpack_public_path__ + \"static/media/Heat.4672d9d0.svg\";","export default __webpack_public_path__ + \"static/media/steel-conversion.21e1ff41.svg\";","export default __webpack_public_path__ + \"static/media/titanium-conversion.703b3fca.svg\";","export default __webpack_public_path__ + \"static/media/plants-conversion.04fca812.svg\";","export default __webpack_public_path__ + \"static/media/heat-conversion.b2fc9302.svg\";","import { useState } from 'react';\nimport styled from 'styled-components';\n\n//import constants\nimport {COLORS} from './constants';\n\n//import components\nimport {ResourceCard, TRCard} from './components/Card';\nimport ResourceOverview from './components/ResourceOverview';\n\n//import icons\nimport trIcon from './icons/TR.svg';\nimport mcIcon from './icons/ME.svg';\nimport steelIcon from './icons/Steel.svg';\nimport titaniumIcon from './icons/Titanium.svg';\nimport plantsIcon from './icons/Plants.svg';\nimport energyIcon from './icons/Energy.svg';\nimport heatIcon from './icons/Heat.svg';\n\n//import conversion graphics\nimport steelConversionGraphic from './icons/steel-conversion.svg';\nimport titaniumConversionGraphic from './icons/titanium-conversion.svg';\nimport plantConversionGraphic from './icons/plants-conversion.svg';\nimport heatConversionGraphic from './icons/heat-conversion.svg';\n\nfunction App() {\n\n    //================ TR ================\n    const [tr, setTR] = useState(20);\n\n    const incrementTR = (amount) => {\n        setTR(tr + amount);\n        addToLog('TR ' + (amount<0?\"\":\"+\") + amount);\n    }\n\n    //================ ME ================\n    const [mcAvailable, setMcAvailable] = useState(0);\n    const [mcProd, setMcProd] = useState(0);\n\n    \n    const incrementMC = (amount) => {\n        setMcAvailable(mcAvailable + amount);\n        addToLog('MegaCredits ' + (amount<0?\"\":\"+\") + amount);\n    }\n    \n    const incrementMcProd = (amount) => {\n        setMcProd(mcProd + amount);\n        addToLog('MegaCredit production ' + (amount<0?\"\":\"+\") + amount);\n    }\n\n    //================ STEEL ================\n    const [steelAvailable, setSteelAvailable] = useState(0);\n    const [steelProd, setSteelProd] = useState(0);\n\n    \n    const incrementSteel = (amount) => {\n        setSteelAvailable(steelAvailable + amount);\n        addToLog('Steel ' + (amount<0?\"\":\"+\") + amount);\n    }\n    \n    const incrementSteelProd = (amount) => {\n        setSteelProd(steelProd + amount);\n        addToLog('Steel production ' + (amount<0?\"\":\"+\") + amount);\n    }\n\n    //================ TITANIUM ================\n    const [titaniumAvailable, setTitaniumAvailable] = useState(0);\n    const [titaniumProd, setTitaniumProd] = useState(0);\n\n    \n    const incrementTitanium = (amount) => {\n        setTitaniumAvailable(titaniumAvailable + amount);\n        addToLog('Titanium ' + (amount<0?\"\":\"+\") + amount);\n    }\n    \n    const incrementTitaniumProd = (amount) => {\n        setTitaniumProd(titaniumProd + amount);\n        addToLog('Titanium production' + (amount<0?\"\":\"+\") + amount);\n    }\n\n    //================ PLANTS ================\n    const [plantsAvailable, setPlantsAvailable] = useState(0);\n    const [plantProd, setPlantProd] = useState(0);\n\n    \n    const incrementPlants = (amount) => {\n        setPlantsAvailable(plantsAvailable + amount);\n        addToLog('Plants ' + (amount<0?\"\":\"+\") + amount);\n    }\n    \n    const incrementPlantProd = (amount) => {\n        setPlantProd(plantProd + amount);\n        addToLog('Plant production ' + (amount<0?\"\":\"+\") + amount);\n    }\n\n    //================ ENERGY ================\n    const [energyAvailable, setEnergyAvailable] = useState(0);\n    const [energyProd, setEnergyProd] = useState(0);\n\n    \n    const incrementEnergy = (amount) => {\n        setEnergyAvailable(energyAvailable + amount);\n        addToLog('Energy ' + (amount<0?\"\":\"+\") + amount);\n    }\n    \n    const incrementEnergyProd = (amount) => {\n        setEnergyProd(energyProd + amount);\n        addToLog('Energy production ' + (amount<0?\"\":\"+\") + amount);\n    }\n\n    //================ HEAT ================\n    const [heatAvailable, setHeatAvailable] = useState(0);\n    const [heatProd, setHeatProd] = useState(0);\n\n    \n    const incrementHeat = (amount) => {\n        setHeatAvailable(heatAvailable + amount);\n        addToLog('Heat ' + (amount<0?\"\":\"+\") + amount);\n    }\n    \n    const incrementHeatProd = (amount) => {\n        setHeatProd(heatProd + amount);\n        addToLog('Heat production' + (amount<0?\"\":\"+\") + amount);\n    }\n    \n    //================ ACTIONS ================\n    const produce = () => {\n        //ME\n        setMcAvailable(mcAvailable + mcProd + tr);\n\n        //Steel\n        setSteelAvailable(steelAvailable + steelProd);\n\n        //Titanium\n        setTitaniumAvailable(titaniumAvailable + titaniumProd);\n\n        //Plants\n        setPlantsAvailable(plantsAvailable + plantProd);\n\n        //Heat\n        //heat must be produced before energy because leftover energy is added to heatAvailable\n        setHeatAvailable(heatAvailable + heatProd + energyAvailable);\n\n        //Energy\n        //leftover energy is converted to heat, do not add energyAvailable here\n        setEnergyAvailable(energyProd);\n\n        toggleProductionChoice();\n        addToLog('Production Phase');\n    }\n\n    const plantConversion = () => {\n        setPlantsAvailable(plantsAvailable - 8);\n        setTR(tr + 1);\n        addToLog('Converted plants to Greenery tile');\n    }\n\n    const heatConversion = () => {\n        setHeatAvailable(heatAvailable - 8);\n        setTR(tr + 1);\n        addToLog('Converted heat to raise the temperature');\n    }\n\n    //================ MISC STATE ================\n    const [showProductionChoice, setShowProductionChoice] = useState(false);\n    const [log, setLog] = useState([]);\n\n    const toggleProductionChoice = () => {\n        setShowProductionChoice(!showProductionChoice);\n    }\n\n    const addToLog = (action) => {\n        setLog(prevLog => [action, ...prevLog.slice(0, 24)]);\n    }\n\n    return (\n        <MainWrapper className=\"App\">\n\n            <Heading>Overview</Heading>\n\n            <TRCard\n                tr={tr}\n                increment={incrementTR}\n                icon={trIcon}\n            />\n\n            <Overview>\n                <ResourceOverview\n                    anchor='MegaCredits'\n                    amount={mcAvailable}\n                    icon={mcIcon}\n                    color={COLORS.mc.bk}\n                    textColor={COLORS.mc.text}\n                />\n                <ResourceOverview\n                    anchor='Steel'\n                    amount={steelAvailable}\n                    icon={steelIcon}\n                    color={COLORS.steel.bk}\n                    textColor={COLORS.steel.text}\n                />\n                <ResourceOverview\n                    anchor='Titanium'\n                    amount={titaniumAvailable}\n                    icon={titaniumIcon}\n                    color={COLORS.titanium.bk}\n                    textColor={COLORS.titanium.text}\n                />\n                <ResourceOverview\n                    anchor='Plants'\n                    amount={plantsAvailable}\n                    icon={plantsIcon}\n                    color={COLORS.plants.bk}\n                    textColor={COLORS.plants.text}\n                />\n                <ResourceOverview\n                    anchor='Energy'\n                    amount={energyAvailable}\n                    icon={energyIcon}\n                    color={COLORS.energy.bk}\n                    textColor={COLORS.energy.text}\n                />\n                <ResourceOverview\n                    anchor='Heat'\n                    amount={heatAvailable}\n                    icon={heatIcon}\n                    color={COLORS.heat.bk}\n                    textColor={COLORS.heat.text}\n                />\n            </Overview>\n\n            {showProductionChoice\n                ? \n                <ProductionChoiceContainer>\n                    <ProductionButton onClick={() => produce()}>Produce</ProductionButton>\n                    <CancelButton onClick={() => toggleProductionChoice()}>Cancel</CancelButton>\n                </ProductionChoiceContainer>\n                :\n                <ProductionButton onClick={() => toggleProductionChoice()}>Production Phase</ProductionButton>\n            }\n\n            <SectionPadding />\n\n            <Heading>Edit Resources</Heading>\n\n            <ResourceCard\n                title = 'MegaCredits'\n                available = {mcAvailable}\n                increment={incrementMC}\n                production = {mcProd}\n                incrementProd = {incrementMcProd}\n                color={COLORS.mc.bk}\n                darkText={true}\n                icon={mcIcon}\n            />\n\n            <ResourceCard\n                title = 'Steel'\n                available = {steelAvailable}\n                increment={incrementSteel}\n                production = {steelProd}\n                incrementProd = {incrementSteelProd}\n                color={COLORS.steel.bk}\n                icon={steelIcon}\n                conversion={<ConversionGraphic src={steelConversionGraphic} alt='Building tag : steel resource = 2 me'/>}\n            />\n\n            <ResourceCard\n                title = 'Titanium'\n                available = {titaniumAvailable}\n                increment={incrementTitanium}\n                production = {titaniumProd}\n                incrementProd = {incrementTitaniumProd}\n                color={COLORS.titanium.bk}\n                icon={titaniumIcon}\n                conversion={<ConversionGraphic src={titaniumConversionGraphic} alt='Space tag : titanium resource = 3 me'/>}\n            />\n\n            <ResourceCard\n                title = 'Plants'\n                available = {plantsAvailable}\n                increment={incrementPlants}\n                production = {plantProd}\n                incrementProd = {incrementPlantProd}\n                color={COLORS.plants.bk}\n                icon={plantsIcon}\n                conversion={<ConversionGraphic src={plantConversionGraphic} alt='8 plant tags -> Greenery tile'/>}\n                conversionAction={plantConversion}\n                conversionAvailable={plantsAvailable >= 8}\n                conversionText='Greenery Tile'\n            />\n\n            <ResourceCard\n                title = 'Energy'\n                available = {energyAvailable}\n                increment={incrementEnergy}\n                production = {energyProd}\n                incrementProd = {incrementEnergyProd}\n                color={COLORS.energy.bk}\n                icon={energyIcon}\n                conversion={<p>Leftover energy is converted to heat</p>}\n            />\n\n            <ResourceCard\n                title = 'Heat'\n                available = {heatAvailable}\n                increment={incrementHeat}\n                production = {heatProd}\n                incrementProd = {incrementHeatProd}\n                color={COLORS.heat.bk}\n                icon={heatIcon}\n                conversion={<ConversionGraphic src={heatConversionGraphic} alt='8 heat tags -> Raise temperature'/>}\n                conversionAction={heatConversion}\n                conversionAvailable={heatAvailable >= 8}\n                conversionText='Raise Temperature'\n            />\n\n            <SectionPadding />\n\n            <Heading>Log</Heading>\n\n            <LogContainer>\n                {log.length === 0 && <p>Your actions will appear here</p>}\n                {log.map((action, i) => <p key={i}>{action}</p>)}\n            </LogContainer>\n\n        </MainWrapper>\n    );\n}\n\nconst MainWrapper = styled.main`\n    min-height: 100%;\n    padding: 16px;\n`;\n\nconst Heading = styled.h2`\n    font-size: 2.25rem;\n    margin: 0;\n    font-weight: 700;\n    font-family: 'Share Tech', sans-serif;\n    text-transform: uppercase;\n    padding-bottom: 8px;\n    border-bottom: 1px solid lightgray;\n`\n\nconst SectionPadding = styled.div`\n    height: 2.5rem;\n`\n\nconst ConversionGraphic = styled.img`\n    height: 32px;\n`\n\nconst ProductionButton = styled.button`\n    background-color: #C24914;\n    padding: 16px 32px;\n    text-align: center;\n    border: none;\n    box-shadow: 0px 3px 6px rgba(0,0,0,.25);\n    border-radius: 32px;\n    color: white;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 1.5px;\n    width: 100%;\n    margin: 24px 0;\n`\n\nconst ProductionChoiceContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 16px;\n`\n\nconst CancelButton = styled(ProductionButton)`\n    background-color: white;\n    color: black;\n`\n\nconst Overview = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 16px;\n`\n\nconst LogContainer = styled.div`\n    padding: 16px 0;\n    p{\n        font-family: 'Share Tech', sans-serif;\n        margin: 8px 0;\n        opacity: .75;\n    }\n`\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}