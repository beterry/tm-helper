{"version":3,"sources":["components/Cubes.js","icons/Greenery.svg","icons/Ocean.svg","icons/Temp.svg","icons/Minus.svg","components/Card.js","icons/TR.svg","icons/ME.svg","icons/Steel.svg","icons/Titanium.svg","icons/Plants.svg","icons/Energy.svg","icons/Heat.svg","icons/steel-conversion.svg","icons/titanium-conversion.svg","icons/plants-conversion.svg","icons/heat-conversion.svg","App.js","index.js"],"names":["CubeContainer","styled","div","Cube","button","GoldCube","SilverCube","BronzeCube","CubesComponent","increment","current","onClick","disabled","ResourceCard","title","available","production","incrementProd","color","darkText","icon","conversion","conversionAction","conversionAvailable","conversionText","children","CardContainer","CardHeader","CardTitle","CardIcon","src","alt","FlexWrapper","AvailableNumber","ProductionContainer","IncrementProduction","className","Production","Cubes","ConversionContainer","ConversionButton","TRCard","tr","GlobalParamContainer","GlobalParam","greeneryTileIcon","oceanTileIcon","tempIcon","minusIcon","section","props","h3","img","h2","MainWrapper","main","ConversionGraphic","ProductionButton","ProductionChoiceContainer","CancelButton","App","useState","setTR","meAvailable","setMeAvailable","meProd","setMeProd","steelAvailable","setSteelAvailable","steelProd","setSteelProd","titaniumAvailable","setTitaniumAvailable","titaniumProd","setTitaniumProd","plantsAvailable","setPlantsAvailable","plantProd","setPlantProd","energyAvailable","setEnergyAvailable","energyProd","setEnergyProd","heatAvailable","setHeatAvailable","heatProd","setHeatProd","showProductionChoice","setShowProductionChoice","toggleProductionChoice","amount","trIcon","meIcon","steelIcon","steelConversionGraphic","titaniumIcon","titaniumConversionGraphic","plantsIcon","plantConversionGraphic","energyIcon","heatIcon","heatConversionGraphic","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a84dbc4a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst CubesComponent = ({increment, current}) => {\r\n    return (\r\n        <CubeContainer>\r\n            <GoldCube onClick={() => increment(-10)} disabled={current < 10}>-10</GoldCube>\r\n            <SilverCube onClick={() => increment(-5)} disabled={current < 5}>-5</SilverCube>\r\n            <BronzeCube onClick={() => increment(-1)} disabled={current < 1}>-1</BronzeCube>\r\n            <BronzeCube onClick={() => increment(1)}>+1</BronzeCube>\r\n            <SilverCube onClick={() => increment(5)}>+5</SilverCube>\r\n            <GoldCube onClick={() => increment(10)}>+10</GoldCube>\r\n        </CubeContainer>\r\n    )\r\n}\r\n\r\nconst CubeContainer = styled.div`\r\n    margin-top: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Cube = styled.button`\r\n    height: 40px;\r\n    width: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n\r\n    &:disabled{\r\n        opacity: .3;\r\n    }\r\n`\r\n\r\nconst GoldCube = styled(Cube)`\r\n    background: linear-gradient(#FFEEAD, #E2B300);\r\n    border: 1px solid #9F7E00;\r\n    color: #9F7E00;\r\n`\r\nconst SilverCube = styled(Cube)`\r\n    background: linear-gradient(#CCCCCC, #808080);\r\n    border: 1px solid #707070;\r\n    color: #707070;\r\n`\r\n\r\nconst BronzeCube = styled(Cube)`\r\n    background: linear-gradient(#E9A300, #B16000);\r\n    border: 1px solid #693F00;\r\n    color: #693F00;\r\n`\r\n\r\nexport default CubesComponent;","export default __webpack_public_path__ + \"static/media/Greenery.ba1b4ebf.svg\";","export default __webpack_public_path__ + \"static/media/Ocean.e7d38271.svg\";","export default __webpack_public_path__ + \"static/media/Temp.c0e14c2d.svg\";","export default __webpack_public_path__ + \"static/media/Minus.0ca4ec73.svg\";","import styled from 'styled-components';\r\n\r\n//import components\r\nimport Cubes from './Cubes';\r\n\r\n//import icons\r\nimport greeneryTileIcon from '../icons/Greenery.svg';\r\nimport oceanTileIcon from '../icons/Ocean.svg';\r\nimport tempIcon from '../icons/Temp.svg';\r\nimport minusIcon from '../icons/Minus.svg';\r\n\r\nconst ResourceCard = ({\r\n    title,\r\n    available,\r\n    increment,\r\n    production,\r\n    incrementProd,\r\n    color = '#C24914',\r\n    darkText = false,\r\n    icon,\r\n    conversion,\r\n    conversionAction,\r\n    conversionAvailable,\r\n    conversionText,\r\n    children\r\n}) => {\r\n    return (\r\n        <CardContainer>\r\n            <CardHeader color={color} darkText={darkText}>\r\n                <CardTitle>{title}</CardTitle>\r\n                <CardIcon src={icon} alt='icon' />\r\n            </CardHeader>\r\n            <FlexWrapper>\r\n                <AvailableNumber>{available}</AvailableNumber>\r\n                <ProductionContainer>\r\n                    <IncrementProduction onClick={() => incrementProd(-1)} disabled={production <= 0}>\r\n                        <span className=\"material-icons\">\r\n                            arrow_left\r\n                        </span>\r\n                    </IncrementProduction>\r\n                    <Production>{production}</Production>\r\n                    <IncrementProduction onClick={() => incrementProd(1)}>\r\n                        <span className=\"material-icons\">\r\n                            arrow_right\r\n                        </span>\r\n                    </IncrementProduction>\r\n                </ProductionContainer>\r\n            </FlexWrapper>\r\n            <Cubes current={available} increment={increment} />\r\n            <ConversionContainer>\r\n                {conversion}\r\n                {conversionAvailable && <ConversionButton onClick={() => conversionAction()} color={color}>{conversionText}</ConversionButton>}\r\n            </ConversionContainer>\r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nconst TRCard = ({\r\n    tr,\r\n    increment,\r\n    color = '#C24914',\r\n    darkText = false,\r\n    icon\r\n}) => {\r\n    return(\r\n        <CardContainer>\r\n            <CardHeader color={color} darkText={darkText}>\r\n                <CardTitle>Terraform Rating</CardTitle>\r\n                <CardIcon src={icon} alt='icon' />\r\n            </CardHeader>\r\n            <AvailableNumber>{tr}</AvailableNumber>\r\n            <GlobalParamContainer>\r\n                <GlobalParam onClick={() => increment(1)}>\r\n                    <img src={greeneryTileIcon} alt='Greenery tile' />\r\n                </GlobalParam>\r\n                <GlobalParam onClick={() => increment(1)}>\r\n                    <img src={oceanTileIcon} alt='Ocean tile' />\r\n                </GlobalParam>\r\n                <GlobalParam onClick={() => increment(1)}>\r\n                    <img src={tempIcon} alt='Raise temperature' />\r\n                </GlobalParam>\r\n                <GlobalParam onClick={() => increment(-1)}>\r\n                    <img src={minusIcon} alt='Minus TR' />\r\n                </GlobalParam>\r\n            </GlobalParamContainer>\r\n        </CardContainer>\r\n    )\r\n}\r\n\r\nconst CardContainer = styled.section`\r\n    background-color: white;\r\n    padding: 16px;\r\n    border-radius: 4px;\r\n    box-shadow: 0px 3px 6px rgba(0,0,0,.25);\r\n    overflow: hidden;\r\n    margin: 24px 0;\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n    color: ${props => props.darkText ? 'black' : 'white'};\r\n    background-color: ${props => props.color};\r\n    padding: 8px 16px;\r\n    margin: -16px;\r\n    margin-bottom: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst CardTitle = styled.h3`\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    margin: 0;\r\n    letter-spacing: 1px;\r\n`\r\n\r\nconst CardIcon = styled.img`\r\n    width: 24px;\r\n`\r\n\r\nconst AvailableNumber = styled.h2`\r\n    font-size: 4rem;\r\n    font-weight: 700;\r\n    margin: 0;\r\n`\r\n\r\nconst FlexWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst ProductionContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: -16px;\r\n`\r\n\r\nconst Production = styled.h3`\r\n    height: 40px;\r\n    width: 40px;\r\n    background: linear-gradient(#643C23, #8D562A);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    margin: 0;\r\n`\r\n\r\nconst IncrementProduction = styled.button`\r\n    height: 40px;\r\n    width: 40px;\r\n    border: none;\r\n    background-color: transparent;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .material-icons{\r\n        font-size: 32px;\r\n    }\r\n`\r\n\r\nconst GlobalParamContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nconst GlobalParam = styled.button`\r\n    width: 60px;\r\n    height: 60px;\r\n    background-color: transparent;\r\n    border: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    img{\r\n        width: 60px;\r\n    }\r\n`\r\n\r\nconst ConversionContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n\r\n    p{\r\n        margin: 0;\r\n        margin-top: 24px;\r\n        opacity: .75;\r\n    }\r\n\r\n    *{\r\n        margin-top: 24px;\r\n    }\r\n`\r\n\r\nconst ConversionButton = styled.button`\r\n    padding: 4px 16px; \r\n    margin-right: -16px;\r\n    background-color: transparent;\r\n    border: none;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1.5px;\r\n    color: ${props => props.color};\r\n    font-weight: 600;\r\n`\r\n\r\nexport {ResourceCard, TRCard};","export default __webpack_public_path__ + \"static/media/TR.6fdd0556.svg\";","export default __webpack_public_path__ + \"static/media/ME.536da777.svg\";","export default __webpack_public_path__ + \"static/media/Steel.32513866.svg\";","export default __webpack_public_path__ + \"static/media/Titanium.8be1d001.svg\";","export default __webpack_public_path__ + \"static/media/Plants.6070467c.svg\";","export default __webpack_public_path__ + \"static/media/Energy.ff9d286b.svg\";","export default __webpack_public_path__ + \"static/media/Heat.4672d9d0.svg\";","export default __webpack_public_path__ + \"static/media/steel-conversion.21e1ff41.svg\";","export default __webpack_public_path__ + \"static/media/titanium-conversion.703b3fca.svg\";","export default __webpack_public_path__ + \"static/media/plants-conversion.04fca812.svg\";","export default __webpack_public_path__ + \"static/media/heat-conversion.b2fc9302.svg\";","import { useState } from 'react';\nimport styled from 'styled-components';\n\n//import components\nimport {ResourceCard, TRCard} from './components/Card';\n\n//import icons\nimport trIcon from './icons/TR.svg';\nimport meIcon from './icons/ME.svg';\nimport steelIcon from './icons/Steel.svg';\nimport titaniumIcon from './icons/Titanium.svg';\nimport plantsIcon from './icons/Plants.svg';\nimport energyIcon from './icons/Energy.svg';\nimport heatIcon from './icons/Heat.svg';\n\n//import conversion graphics\nimport steelConversionGraphic from './icons/steel-conversion.svg';\nimport titaniumConversionGraphic from './icons/titanium-conversion.svg';\nimport plantConversionGraphic from './icons/plants-conversion.svg';\nimport heatConversionGraphic from './icons/heat-conversion.svg';\n\nfunction App() {\n\n    //================ TR ================\n    const [tr, setTR] = useState(20);\n\n    const incrementTR = (amount) => {\n        setTR(tr + amount);\n    }\n\n    //================ ME ================\n    const [meAvailable, setMeAvailable] = useState(0);\n    const [meProd, setMeProd] = useState(0);\n\n    \n    const incrementME = (amount) => {\n        setMeAvailable(meAvailable + amount);\n    }\n    \n    const incrementMeProd = (amount) => {\n        setMeProd(meProd + amount);\n    }\n\n    //================ STEEL ================\n    const [steelAvailable, setSteelAvailable] = useState(0);\n    const [steelProd, setSteelProd] = useState(0);\n\n    \n    const incrementSteel = (amount) => {\n        setSteelAvailable(steelAvailable + amount);\n    }\n    \n    const incrementSteelProd = (amount) => {\n        setSteelProd(steelProd + amount);\n    }\n\n    //================ TITANIUM ================\n    const [titaniumAvailable, setTitaniumAvailable] = useState(0);\n    const [titaniumProd, setTitaniumProd] = useState(0);\n\n    \n    const incrementTitanium = (amount) => {\n        setTitaniumAvailable(titaniumAvailable + amount);\n    }\n    \n    const incrementTitaniumProd = (amount) => {\n        setTitaniumProd(titaniumProd + amount);\n    }\n\n    //================ PLANTS ================\n    const [plantsAvailable, setPlantsAvailable] = useState(0);\n    const [plantProd, setPlantProd] = useState(0);\n\n    \n    const incrementPlants = (amount) => {\n        setPlantsAvailable(plantsAvailable + amount);\n    }\n    \n    const incrementPlantProd = (amount) => {\n        setPlantProd(plantProd + amount);\n    }\n\n    //================ ENERGY ================\n    const [energyAvailable, setEnergyAvailable] = useState(0);\n    const [energyProd, setEnergyProd] = useState(0);\n\n    \n    const incrementEnergy = (amount) => {\n        setEnergyAvailable(energyAvailable + amount);\n    }\n    \n    const incrementEnergyProd = (amount) => {\n        setEnergyProd(energyProd + amount);\n    }\n\n    //================ HEAT ================\n    const [heatAvailable, setHeatAvailable] = useState(0);\n    const [heatProd, setHeatProd] = useState(0);\n\n    \n    const incrementHeat = (amount) => {\n        setHeatAvailable(heatAvailable + amount);\n    }\n    \n    const incrementHeatProd = (amount) => {\n        setHeatProd(heatProd + amount);\n    }\n    \n    //================ ACTIONS ================\n    const produce = () => {\n        //ME\n        setMeAvailable(meAvailable + meProd + tr);\n\n        //Steel\n        setSteelAvailable(steelAvailable + steelProd);\n\n        //Titanium\n        setTitaniumAvailable(titaniumAvailable + titaniumProd);\n\n        //Plants\n        setPlantsAvailable(plantsAvailable + plantProd);\n\n        //Heat\n        //heat must be produced before energy because leftover energy is added to heatAvailable\n        setHeatAvailable(heatAvailable + heatProd + energyAvailable);\n\n        //Energy\n        //leftover energy is converted to heat, do not add energyAvailable here\n        setEnergyAvailable(energyProd);\n\n        toggleProductionChoice();\n    }\n\n    const plantConversion = () => {\n        setPlantsAvailable(plantsAvailable - 8);\n        setTR(tr + 1);\n    }\n\n    const heatConversion = () => {\n        setHeatAvailable(heatAvailable - 8);\n        setTR(tr + 1);\n    }\n\n    //================ MISC STATE ================\n    const [showProductionChoice, setShowProductionChoice] = useState(false);\n\n    const toggleProductionChoice = () => {\n        setShowProductionChoice(!showProductionChoice);\n    }\n\n    return (\n        <MainWrapper className=\"App\">\n            {showProductionChoice\n                ? \n                <ProductionChoiceContainer>\n                    <ProductionButton onClick={() => produce()}>Produce</ProductionButton>\n                    <CancelButton onClick={() => toggleProductionChoice()}>Cancel</CancelButton>\n                </ProductionChoiceContainer>\n                :\n                <ProductionButton onClick={() => toggleProductionChoice()}>Production Phase</ProductionButton>\n            }\n\n            <TRCard\n                tr={tr}\n                increment={incrementTR}\n                icon={trIcon}\n            />\n\n            <ResourceCard\n                title = 'MegaCredits'\n                available = {meAvailable}\n                increment={incrementME}\n                production = {meProd}\n                incrementProd = {incrementMeProd}\n                color='#FFE600'\n                darkText={true}\n                icon={meIcon}\n            />\n\n            <ResourceCard\n                title = 'Steel'\n                available = {steelAvailable}\n                increment={incrementSteel}\n                production = {steelProd}\n                incrementProd = {incrementSteelProd}\n                color='#976138'\n                icon={steelIcon}\n                conversion={<ConversionGraphic src={steelConversionGraphic} alt='Building tag : steel resource = 2 me'/>}\n            />\n\n            <ResourceCard\n                title = 'Titanium'\n                available = {titaniumAvailable}\n                increment={incrementTitanium}\n                production = {titaniumProd}\n                incrementProd = {incrementTitaniumProd}\n                color='#000000'\n                icon={titaniumIcon}\n                conversion={<ConversionGraphic src={titaniumConversionGraphic} alt='Space tag : titanium resource = 3 me'/>}\n            />\n\n            <ResourceCard\n                title = 'Plants'\n                available = {plantsAvailable}\n                increment={incrementPlants}\n                production = {plantProd}\n                incrementProd = {incrementPlantProd}\n                color='#6CB526'\n                icon={plantsIcon}\n                conversion={<ConversionGraphic src={plantConversionGraphic} alt='8 plant tags -> Greenery tile'/>}\n                conversionAction={plantConversion}\n                conversionAvailable={plantsAvailable >= 8}\n                conversionText='Greenery Tile'\n            />\n\n            <ResourceCard\n                title = 'Energy'\n                available = {energyAvailable}\n                increment={incrementEnergy}\n                production = {energyProd}\n                incrementProd = {incrementEnergyProd}\n                color='#94308B'\n                icon={energyIcon}\n                conversion={<p>Leftover energy is converted to heat</p>}\n            />\n\n            <ResourceCard\n                title = 'Heat'\n                available = {heatAvailable}\n                increment={incrementHeat}\n                production = {heatProd}\n                incrementProd = {incrementHeatProd}\n                color='#EA4929'\n                icon={heatIcon}\n                conversion={<ConversionGraphic src={heatConversionGraphic} alt='8 heat tags -> Raise temperature'/>}\n                conversionAction={heatConversion}\n                conversionAvailable={heatAvailable >= 8}\n                conversionText='Raise Temperature'\n            />\n\n        </MainWrapper>\n    );\n}\n\nconst MainWrapper = styled.main`\n    min-height: 100%;\n    background-color: #F5F5F5;\n\n    padding: 16px;\n`;\n\nconst ConversionGraphic = styled.img`\n    height: 32px;\n`\n\nconst ProductionButton = styled.button`\n    background-color: #C24914;\n    padding: 16px 32px;\n    text-align: center;\n    border: none;\n    box-shadow: 0px 3px 6px rgba(0,0,0,.25);\n    border-radius: 32px;\n    color: white;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 1.5px;\n    width: 100%;\n`\n\nconst ProductionChoiceContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 16px;\n`\n\nconst CancelButton = styled(ProductionButton)`\n    background-color: white;\n    color: black;\n`\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}